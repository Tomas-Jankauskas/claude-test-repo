name: Auto-generate PR Documentation

on:
  pull_request:
    types: [closed]  # Trigger when PR is closed (merged)

permissions:
  contents: write
  issues: write
  actions: write

jobs:
  create-documentation-request:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Create Documentation Request Issue
        id: create-issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Generate documentation for PR #${{ github.event.pull_request.number }}`,
              body: `
            @claude **URGENT DOCUMENTATION TASK**: Create documentation for merged PR #${{ github.event.pull_request.number }}

            **STEP-BY-STEP INSTRUCTIONS:**
            1. **FIRST**: Get PR #${{ github.event.pull_request.number }} diff and analyze the changes
            2. **SECOND**: Create file \`docs/prs/pr-${{ github.event.pull_request.number }}-[clean-title].md\` (clean title = lowercase, replace spaces/special chars with dashes)
            3. **THIRD**: Write comprehensive documentation using the template below
            4. **FOURTH**: Use the GitHub API to CREATE A NEW PULL REQUEST automatically (not just provide a link)

            **PR TO DOCUMENT:**
            - Title: ${{ github.event.pull_request.title }}
            - Author: ${{ github.event.pull_request.user.login }}
            - Merged: ${{ github.event.pull_request.merged_at }}
            - URL: ${{ github.event.pull_request.html_url }}

            **DOCUMENTATION TEMPLATE TO USE:**
            \`\`\`markdown
            # PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}

            ## PR Summary
            [Brief overview of what this PR accomplishes]

            ## Changes Overview
            [List of files modified and key functionality added/changed]

            ## Technical Details
            [Implementation approach, architecture decisions, key code changes]

            ## Testing
            [Tests added, modified, or testing approach used]

            ## Impact Analysis
            [Breaking changes, performance implications, compatibility notes]

            ## Future Considerations
            [Follow-up work, potential improvements, known limitations]
            \`\`\`

            **CRITICAL INSTRUCTIONS**:
            - The docs/prs/ directory ALREADY EXISTS - DO NOT use mkdir or any directory creation commands
            - Use ONLY the Write tool to create the .md file directly
            - DO NOT use bash commands like mkdir, touch, or other file system operations
            - Focus on: Analyze PR → Write documentation file → git add -f → git commit → git push → **CREATE PR WITH GITHUB API**
            - The file will be in .gitignore, so use "git add -f" to force add it
            - **MUST CREATE THE ACTUAL PR**: Use mcp_github_create_pull_request tool to create the PR automatically
            `,
              labels: ['documentation', 'auto-generated']
            });
            
            console.log(`Created issue #${issue.data.number}`);
            return issue.data.number;

      - name: Log Issue Creation
        run: |
          echo "Documentation request issue created successfully"
          echo "Claude will be automatically triggered by the @claude mention in the issue"
          echo "Issue number: ${{ steps.create-issue.outputs.result }}"
