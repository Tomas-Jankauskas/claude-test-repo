name: Auto-generate PR Documentation

on:
  pull_request:
    types: [closed]  # Trigger when PR is closed (merged)

permissions:
  contents: write
  issues: write
  actions: write

jobs:
  create-documentation-request:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Create Documentation Request Issue
        id: create-issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Generate documentation for PR #${{ github.event.pull_request.number }}`,
              body: `
            @claude Please analyze the recently merged PR #${{ github.event.pull_request.number }} and generate comprehensive documentation for it.

            **PR Details:**
            - Title: ${{ github.event.pull_request.title }}
            - Author: ${{ github.event.pull_request.user.login }}
            - Merged: ${{ github.event.pull_request.merged_at }}
            - Link: ${{ github.event.pull_request.html_url }}

            **Task:** Create a new file in the \`docs/prs/\` directory named \`pr-${{ github.event.pull_request.number }}-[clean-title].md\`.

            The documentation should include:
            1. **PR Summary** - Overview and details
            2. **Changes Overview** - Files modified and functionality
            3. **Technical Details** - Implementation approach
            4. **Testing** - Tests added or modified
            5. **Impact Analysis** - Breaking changes, performance
            6. **Future Considerations** - Follow-up work

            Please review the PR diff and create comprehensive documentation, then submit as a new PR.
            `,
              labels: ['documentation', 'auto-generated']
            });
            
            console.log(`Created issue #${issue.data.number}`);
            return issue.data.number;

      - name: Trigger Claude Code Action
        uses: actions/github-script@v7
        with:
          script: |
            // Trigger the Claude Code Action workflow manually
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'claude-code-action.yml',
                ref: 'main',
                inputs: {
                  issue_number: '${{ steps.create-issue.outputs.result }}'
                }
              });
              console.log('Successfully triggered Claude Code Action workflow');
            } catch (error) {
              console.error('Failed to trigger Claude Code Action workflow:', error);
              // The issue was created, so Claude can still be triggered manually
              console.log('Issue created successfully - Claude can be triggered manually by commenting @claude');
            }
